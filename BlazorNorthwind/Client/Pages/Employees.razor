@page "/Employees"
@inject HttpClient Http

<h1>لیست کارمندان</h1>

<div class="container">
    <div class="row mt-2">
        <div class="col-4">
            <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#AddEditEmpModal" @onclick="AddEmployee">
                <i class="fa fa-user-plus"></i>
                کارمند جدید
            </button>
        </div>
        <div class="col-5 offset-3">
            <div class="input-group">
                <input type="text" class="form-control" placeholder="جستجو کارمند..." @bind="searchString" />
                <div class="input-group-append">
                    <button class="btn btn-info" @onclick="SearchEmployee">
                        <i class="fa fa-search"></i>
                    </button>
                </div>
            </div>

        </div>
    </div>
</div>
<br />
@if (empList == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>نام</th>
                <th>جنسیت</th>
                <th>عنوان شغلی</th>
                <th>شهر تولد</th>
                <th>عملیات</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var emp in empList)
            {
                <tr>
                    <td>@emp.EmployeeName</td>
                    <td>@emp.Gender</td>
                    <td>@emp.Designation</td>
                    <td>@emp.CityName</td>
                    <td>
                        <button class="btn btn-outline-dark" data-bs-toggle="modal" data-bs-target="#AddEditEmpModal"
                                @onclick="(async () => await EditEmployee(emp.EmployeeId))">
                            <i class="fa fa-pencil-square-o"></i>
                            ویرایش
                        </button>
                        <button class="btn btn-outline-danger" data-bs-toggle="modal" data-bs-target="#deleteEmpModal"
                                @onclick="(async () => await DeleteConfirm(emp.EmployeeId))">
                            <i class="fa fa-trash-o"></i>
                            حذف
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
<div class="modal fade" id="AddEditEmpModal"  aria-labelledby="AddEditEmpModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">@modalTitle</h3>
                <button type="button" class="btn-close" data-bs-dismiss="modal">
                    <span aria-hidden="true">X</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <label class="control-label"  >نام</label>
                        <input class="form-control" @bind=emp.EmployeeName />
                    </div>
                    <div class="form-group">
                        <label class="control-label">جنسیت</label>
                        <select class="form-control" @bind=emp.Gender>
                            <option value="">-- جنسیت --</option>
                            <option value="مرد">مرد</option>
                            <option value="زن">زن</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label class="control-label">عنوان شغلی</label>
                        <input class="form-control" @bind=emp.Designation />
                    </div>
                    <div class="form-group">
                        <label class="control-label">شهر تولد</label>
                        <select class="form-control" @bind=emp.CityName>
                            <option value="-- Select City --">-- Select City --</option>
                            @foreach (var city in cityList)
                            {
                                <option value=@city.CityName>@city.CityName</option>
                            }
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button class="btn btn-block btn-success"
                        @onclick="(async () => await SaveEmployee())" data-bs-dismiss="modal">
                    ثبت
                </button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="deleteEmpModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">تایید حذف !!!</h3>
                <button type="button" class="close" data-bs-dismiss="modal">
                    <span aria-hidden="true">X</span>
                </button>
            </div>
            <div class="modal-body">
                <table class="table">
                    <tr>
                        <td>نام</td>
                        <td>@emp.EmployeeName</td>
                    </tr>
                    <tr>
                        <td>جنسیت</td>
                        <td>@emp.Gender</td>
                    </tr>
                    <tr>
                        <td>عنوان شغلی</td>
                        <td>@emp.Designation</td>
                    </tr>
                    <tr>
                        <td>شهر تولد</td>
                        <td>@emp.CityName</td>
                    </tr>
                </table>
            </div>
            <div class="modal-footer">
                <button class="btn btn-danger" data-bs-dismiss="modal"
                        @onclick="@(async () => await DeleteEmployee(@emp.EmployeeId))">
                    حذف
                </button>
                <button data-bs-dismiss="modal" class="btn">انصراف</button>
            </div>
        </div>
    </div>
</div>

@code {
        //private HttpClient Http { get; set; }
        private List<Employee> empList = new List<Employee>();
        private List<Cities> cityList = new List<Cities>();
        private Employee emp = new Employee();
        private string modalTitle { get; set; }
        private string searchString { get; set; }


        protected override async Task  OnInitializedAsync()
        {
            await GetCityList();
            await GetEmployeeList();
        }
        
        protected async Task GetCityList()
        {
            cityList = await Http.GetFromJsonAsync<List<Cities>>("api/Employee/GetCities");
        }
        protected async Task GetEmployeeList()
        {
            empList = await Http.GetFromJsonAsync<List<Employee>>("api/Employee");
        }
        protected void AddEmployee()
        {
            emp = new Employee();
            modalTitle = "ثبت کارمند جدید";
        }
        protected async Task EditEmployee(string empID)
        {
            emp = await Http.GetFromJsonAsync<Employee>("/api/Employee/" + empID);
            modalTitle = "ویرایش کارمند";
        }
        protected async Task SaveEmployee()
        {
            if (emp.EmployeeId != null)
            {
                await Http.PutAsJsonAsync<Employee>("api/Employee/", emp);
            }
            else
            {
                await Http.PostAsJsonAsync("/api/Employee/", emp);
            }
            await GetEmployeeList();
        }
        protected async Task DeleteConfirm(string empID)
        {
            emp = await Http.GetFromJsonAsync<Employee>("/api/Employee/" + empID);
        }
        protected async Task DeleteEmployee(string empID)
        {
            Console.WriteLine(empID);
            await Http.DeleteAsync("api/Employee/" + empID);
            await GetEmployeeList();
        }
        protected async Task SearchEmployee()
        {
            await GetEmployeeList();
            if (searchString != "")
            {
                empList = empList.Where(
                x => x.EmployeeName.IndexOf(searchString,
                StringComparison.OrdinalIgnoreCase) != -1).ToList();
            }
        }
}
